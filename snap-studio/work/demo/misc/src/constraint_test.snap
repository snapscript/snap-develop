var xx: []=[2,33,33];
var yy = {22,22,1,1};
var zz = {a: 'A', b: 'B', c: 'C'};

println(xx);
println(yy);
println(zz);

function func(x: []){
   println(x);
}

function func(x: {}){
   println(x);
}

function func(x: {:}){
   println(x);
}

func((a,b)->println("${a},${b}"));
func((a:String,b:String)->println("a=${a} b=${b}"));

function func(x: (a,b)) {
   x(11,22);
}

println(["a", "b", "c"]);

function func(x: Byte[]){
   println(x);
}

function func(x: Byte[][]){
   println(x);
}

const b = new Byte[10];
const bb = new Byte[10][10];

func(b);
func(bb);

module Shape {
   class Point{
      var x;
      var y;
      new(x,y){
         this.x=x;
         this.y=y;
      }
      toString(){
         return "${x},${y}";
      }
   }
}

var p1 = new Shape.Point[1];
var p2: Shape.Point[] = new Shape.Point[1];

p1[0] = new Shape.Point(22,345);
p2[0] = new Shape.Point(44,55);

func(p1);
func(p2);

function func(x: Shape.Point[]){
   println(x[0]);
}
